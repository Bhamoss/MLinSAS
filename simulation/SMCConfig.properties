modelsFolderName=models

# Accepted network strings: DeltaIoTv1, DeltaIoTv2
simulationNetwork=DeltaIoTv1
requirements=energyConsumption, packetLoss, latency

# Models for DeltaIoTv1
energyConsumption.modelFileName=EnergyConsumption.xml
energyConsumption.type=simulation
energyConsumption.totalSimulations=10

packetLoss.modelFileName=PacketLoss-SMC.xml
packetLoss.type=probability
packetLoss.alpha=0.10
packetLoss.epsilon=0.01

latency.modelFileName=LatencyWithoutPackets.xml
latency.type=simulation
latency.totalSimulations=10


# Models for DeltaIoTv2
# energyConsumption.modelFileName=EnergyConsumption_DeltaIoTv2.xml
# energyConsumption.type=simulation
# energyConsumption.totalSimulations=10

# packetLoss.modelFileName=PacketLoss-SMC_DeltaIoTv2.xml
# packetLoss.type=probability
# packetLoss.alpha=0.10
# packetLoss.epsilon=0.01

# latency.modelFileName=LatencyWithoutPackets_DeltaIoTv2.xml
# latency.type=simulation
# latency.totalSimulations=10


# Possible run modes: 
#   - machinelearning:  Regular mode (only use positively predicted configurations for verification)
#   - activform:        ActivFORMS (formal verification of all options)
#   - comparison:       Compares classification and regression methods (after learning)
#   - mladjustment:     Compares classification and regression methods (before and after learning)
runMode=machinelearning

# Possible task types: 
#   - classification:       Classification with a single packet loss goal    
#   - regression:           Regression with a single packet loss goal
#   - plLaClassification:   Classification with a packet loss and latency goal
taskType=classification

amountOfLearningCycles=30
amountOfCycles=300
distributionGap=20

targets= packetLoss, latency
operators= <,<
thressholds= 10, 5

# for displaying an hour date time
human=false
